// Code generated by protoc-gen-jai

#import "proto";
#import "Basic";
#import "Deep_Copy";

Connector :: struct {
    name: *string;
    pins: *s32;

    _desc_table :: struct {
        name := FieldDesc.{tag=1, type=type_of(string), optional=true, repeated=false, wt=.Size};
        pins := FieldDesc.{tag=2, type=type_of(s32), optional=true, repeated=false, wt=.Fixed32};
    };

    encode :: (b: *[..]u8, self: Connector) {
        #insert #run encode_code_writer(Connector.{});
    }

    decode :: (b: []u8) -> Connector {
        #insert #run decode_code_writer(Connector.{});
    }

};
#insert #run setters_code_writer(Connector.{});
Firmware :: struct {
    build_sha: *string;
    fpga_part_number: *string;
    connector: [..]Connector;
    num_leds: *s32;
    board_name: *string;
    comment: *string;

    _desc_table :: struct {
        build_sha := FieldDesc.{tag=1, type=type_of(string), optional=true, repeated=false, wt=.Size};
        fpga_part_number := FieldDesc.{tag=2, type=type_of(string), optional=true, repeated=false, wt=.Size};
        connector := FieldDesc.{tag=3, type=type_of(Connector), optional=false, repeated=true, wt=.Size};
        num_leds := FieldDesc.{tag=4, type=type_of(s32), optional=true, repeated=false, wt=.Fixed32};
        board_name := FieldDesc.{tag=5, type=type_of(string), optional=true, repeated=false, wt=.Size};
        comment := FieldDesc.{tag=6, type=type_of(string), optional=true, repeated=false, wt=.Size};
    };

    encode :: (b: *[..]u8, self: Firmware) {
        #insert #run encode_code_writer(Firmware.{});
    }

    decode :: (b: []u8) -> Firmware {
        #insert #run decode_code_writer(Firmware.{});
    }

};
#insert #run setters_code_writer(Firmware.{});
