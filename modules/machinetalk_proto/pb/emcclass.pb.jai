// Code generated by protoc-gen-jai

#import "proto";
#import "Basic";
#import "Deep_Copy";

PmCartesian :: struct {
    x: *float64;
    y: *float64;
    z: *float64;

    _desc_table :: struct {
        x := FieldDesc.{tag=10, type=type_of(float64), optional=true, repeated=false, wt=.Fixed64};
        y := FieldDesc.{tag=20, type=type_of(float64), optional=true, repeated=false, wt=.Fixed64};
        z := FieldDesc.{tag=30, type=type_of(float64), optional=true, repeated=false, wt=.Fixed64};
    };

    encode :: (b: *[..]u8, self: PmCartesian) {
        #insert #run encode_code_writer(PmCartesian.{});
    }

    decode :: (b: []u8) -> PmCartesian {
        #insert #run decode_code_writer(PmCartesian.{});
    }

};
#insert #run setters_code_writer(PmCartesian.{});
EmcPose :: struct {
    tran: PmCartesian;
    a: *float64;
    b: *float64;
    c: *float64;
    u: *float64;
    v: *float64;
    w: *float64;

    _desc_table :: struct {
        tran := FieldDesc.{tag=10, type=type_of(PmCartesian), optional=false, repeated=false, wt=.Size};
        a := FieldDesc.{tag=20, type=type_of(float64), optional=true, repeated=false, wt=.Fixed64};
        b := FieldDesc.{tag=30, type=type_of(float64), optional=true, repeated=false, wt=.Fixed64};
        c := FieldDesc.{tag=40, type=type_of(float64), optional=true, repeated=false, wt=.Fixed64};
        u := FieldDesc.{tag=50, type=type_of(float64), optional=true, repeated=false, wt=.Fixed64};
        v := FieldDesc.{tag=60, type=type_of(float64), optional=true, repeated=false, wt=.Fixed64};
        w := FieldDesc.{tag=70, type=type_of(float64), optional=true, repeated=false, wt=.Fixed64};
    };

    encode :: (b: *[..]u8, self: EmcPose) {
        #insert #run encode_code_writer(EmcPose.{});
    }

    decode :: (b: []u8) -> EmcPose {
        #insert #run decode_code_writer(EmcPose.{});
    }

};
#insert #run setters_code_writer(EmcPose.{});
