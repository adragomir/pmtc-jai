// Code generated by protoc-gen-jai

#import "proto";
#import "Basic";
#import "Deep_Copy";

Sample :: struct {
    timestamp: *u64;
    v_bytes: *string;
    v_int32: *s32;
    v_int64: *s64;
    v_uint32: *u32;
    v_uint64: *u64;
    v_double: *float64;
    v_string: *string;
    v_bool: *bool;

    _desc_table :: struct {
        timestamp := FieldDesc.{tag=1, type=type_of(u64), optional=true, repeated=false, wt=.Fixed64};
        v_bytes := FieldDesc.{tag=2, type=type_of(string), optional=true, repeated=false, wt=.Size};
        v_int32 := FieldDesc.{tag=3, type=type_of(s32), optional=true, repeated=false, wt=.Fixed32};
        v_int64 := FieldDesc.{tag=4, type=type_of(s64), optional=true, repeated=false, wt=.Fixed64};
        v_uint32 := FieldDesc.{tag=5, type=type_of(u32), optional=true, repeated=false, wt=.Fixed32};
        v_uint64 := FieldDesc.{tag=6, type=type_of(u64), optional=true, repeated=false, wt=.Fixed64};
        v_double := FieldDesc.{tag=7, type=type_of(float64), optional=true, repeated=false, wt=.Fixed64};
        v_string := FieldDesc.{tag=8, type=type_of(string), optional=true, repeated=false, wt=.Size};
        v_bool := FieldDesc.{tag=9, type=type_of(bool), optional=true, repeated=false, wt=.Varint};
    };

    encode :: (b: *[..]u8, self: Sample) {
        #insert #run encode_code_writer(Sample.{});
    }

    decode :: (b: []u8) -> Sample {
        #insert #run decode_code_writer(Sample.{});
    }

};
#insert #run setters_code_writer(Sample.{});
