// Code generated by protoc-gen-jai

#import "proto";
#import "Basic";
#import "Deep_Copy";


TestOpType :: enum s32 {
    LINE :: 10;
    CIRCLE :: 20;
};
Test1 :: struct {
    op: TestOpType;
    end: EmcPose;
    center: *PmCartesian;
    normal: *PmCartesian;
    turn: *s32;

    _desc_table :: struct {
        op := FieldDesc.{tag=10, type=type_of(TestOpType), optional=false, repeated=false, wt=.Varint};
        end := FieldDesc.{tag=20, type=type_of(EmcPose), optional=false, repeated=false, wt=.Size};
        center := FieldDesc.{tag=30, type=type_of(PmCartesian), optional=true, repeated=false, wt=.Size};
        normal := FieldDesc.{tag=40, type=type_of(PmCartesian), optional=true, repeated=false, wt=.Size};
        turn := FieldDesc.{tag=50, type=type_of(s32), optional=true, repeated=false, wt=.ZigZag};
    };

    encode :: (b: *[..]u8, self: Test1) {
        #insert #run encode_code_writer(Test1.{});
    }

    decode :: (b: []u8) -> Test1 {
        #insert #run decode_code_writer(Test1.{});
    }

};
#insert #run setters_code_writer(Test1.{});
Test2 :: struct {

    _desc_table :: struct {
    };

    encode :: (b: *[..]u8, self: Test2) {
        #insert #run encode_code_writer(Test2.{});
    }

    decode :: (b: []u8) -> Test2 {
        #insert #run decode_code_writer(Test2.{});
    }

};
#insert #run setters_code_writer(Test2.{});
Test3 :: struct {

    _desc_table :: struct {
    };

    encode :: (b: *[..]u8, self: Test3) {
        #insert #run encode_code_writer(Test3.{});
    }

    decode :: (b: []u8) -> Test3 {
        #insert #run decode_code_writer(Test3.{});
    }

};
#insert #run setters_code_writer(Test3.{});
